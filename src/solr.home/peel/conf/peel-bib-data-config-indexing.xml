<dataConfig>
    <dataSource name="file" type="FileDataSource"/>
    <script>
        <![CDATA[
            function validatePubyears(row) {   // see peel-scripts/xsl/martini2solr.xsl
                var pubyear = new String(row.get( 'pubyear' ));
                row.remove('pubyear');
                if ( pubyear == null ) { 
                    row.remove( 'pubyear' ); 
                    return row;
                } else if( pubyear.match('[0-9]{4}([-/][0-9]{4})*') ) {
                    row.put( 'pubyear', pubyear.substring(0,4));
                } else if( pubyear.match('c?[0-9]{3}[?-]?') ) {
                    row.put( 'pubyear', pubyear.replace(/c?([0-9]{3})[?-]?/g, '$10') );
                } else if( pubyear.match('a? ?[0-9]{2}[?-]?')) {
                    row.put( 'pubyear', pubyear.replace(/a? ?([0-9]{2})[?-]?/g, '$100'));
                } else if( pubyear.match('[0-9]{4}')) {
                    row.put( 'pubyear', pubyear.replace(/.*([0-9]{4})?.+/g, '$1'));
                } else {
                    row.remove( 'pubyear' );
                }
                return row; 
            }
            function mountDateFromItemStatusFile(row,context) {
                var mountDate = row.get('mountdate');
                var fileDir = context.getVariableResolver().replaceTokens('${bib.fileDir}');
                context.setSessionAttribute('mountDate', mountDate, 'global');
                context.setSessionAttribute('fileDir', fileDir, 'global');
            }
            function setMountDate(row,context) {
                var fileDir = context.getSessionAttribute('fileDir', 'global');
                var contextFileDir =  context.resolve('bib.fileDir');
                var mountDate = context.getSessionAttribute('mountDate', 'global');
                if( !contextFileDir.equals(fileDir) || mountDate == null || mountDate == '' ) {
                    mountDate = context.getVariableResolver().replaceTokens('${dataimporter.request.mountdate}');
                }
                row.put( 'mountDate', mountDate );
                return row; 
            }
        ]]>
    </script>
    <document>
        <!-- this outer processor generates a list of files satisfying the conditions
            specified in the attributes -->
        
        <entity name="bib" processor="FileListEntityProcessor" fileName="bib.properties" excludes="hold"
            rootEntity="false" recursive="true" dataSource="null" onError="continue"
            baseDir="${dataimporter.request.baseDir}" 
            >
            <entity name="itemproperties" processor="FileListEntityProcessor" fileName="itemstatus.properties"
                rootEntity="false" recursive="true" dataSource="null" onError="continue"
                baseDir="${bib.fileDir}" 
                >
                <entity name="itemstatus" processor="PropertiesEntityProcessor" 
                    url="${itemproperties.fileAbsolutePath}" transformer="RegexTransformer,LogTransformer,script:mountDateFromItemStatusFile"
                    logTemplate="      metadata ${itemproperties.fileAbsolutePath}"
                    rootEntity="false" logLevel="debug" dataSource="file">
                    <field column="mountdate" name="mountdate"/>
                </entity>
            </entity>
            <entity name="properties" processor="PropertiesEntityProcessor"
                url="${bib.fileAbsolutePath}" transformer="TemplateTransformer,RegexTransformer,LogTransformer,script:validatePubyears,script:setMountDate"
                logTemplate="      metadata ${bib.fileAbsolutePath}"
                logLevel="debug" rootEntity="true" dataSource="file">
                
                <!-- utility fields -->
                <field column="modified" template="${bib.fileLastModified}"/>
                <field column="uri" template="${bib.fileAbsolutePath}"/>
                <field column="language" name="language" splitBy=" \| "/>
                <field column="pubyear" name="pubyear"/>
                <field column="actyear" name="actyear"/>
                <field column="peelnumsort" template="${properties.peelnum}"/>
                <field column="peelnum" regex="^0*" replaceWith="" />
                <field column="peel1" name="peel1"/>
                <field column="peel2" name="peel2"/>
                <field column="collection" template="peelbib"/>
                <field column="index" template="peelbib"/>
                <field column="digstatus" name="digstatus"/>
                <field column="oaiset" name="oaiset" splitBy=" \| "/>
                <field column="rectype" template="text"/>
                <!-- index fields -->
                <field column="title" name="title"/>
                <field column="author" name="author"/>
                <field column="subject_en" name="subject_en"/>
                <field column="subject_fr" name="subject_fr"/>
                <field column="bibrecord" name="bibrecord"/>
                <!-- display fields -->
                <field column="subjectdisplay_en" sourceColName="subjectdisplay_en" splitBy=" \| "/>
                <field column="subjectdisplay_fr" sourceColName="subjectdisplay_fr" splitBy=" \| "/>
                <field column="geodisplay_en" sourceColName="geodisplay_en" splitBy=" \| "/>
                <field column="geodisplay_fr" sourceColName="geodisplay_fr" splitBy=" \| "/>
                <field column="origindisplay" name="origindisplay"/>
                <field column="titledisplay" name="titledisplay"/>
                <field column="authordisplay" name="authordisplay" splitBy=" \| "/>
                <!-- sort fields -->
                <field column="titlesort" name="titlesort"/>
                <field column="authorsort" name="authorsort"/>
                <entity name="txt" processor="FileListEntityProcessor" fileName="^fulltext.txt$"
                    rootEntity="false" recursive="true" dataSource="null" onError="continue"
                    baseDir="${bib.fileDir}" 
                    >
                    <entity name="fulltext" processor="PlainTextEntityProcessor" 
                        url="${txt.fileAbsolutePath}" transformer="TemplateTransformer,RegexTransformer,LogTransformer"
                        logTemplate="      fulltext"
                        logLevel="debug" dataSource="file">
                        <field column="plainText" name="content"/>
                        <field column="clipEnd" template="${bib.fileAbsolutePath}" regex="[\\/]" replaceWith="_"/>
                        <field column="uid" sourceColName="clipEnd" regex="^.*_indexing_.*?" replaceWith="${1}"/>
                    </entity>
                </entity>
            </entity>
        </entity>
    </document>
</dataConfig>
